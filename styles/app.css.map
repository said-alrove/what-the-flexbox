{"version":3,"sourceRoot":"","sources":["../scss/03-base/_base.scss","../scss/02-vendors/_lessier.scss","../scss/03-base/_extends.scss","../scss/01-abstracts/_fonts.scss","../scss/03-base/_helpers.scss","../scss/04-layout/_nav-main.scss","../scss/04-layout/_footer.scss","../scss/05-components/_container.scss","../scss/05-components/_loader.scss","../scss/05-components/_navigation.scss","../scss/01-abstracts/index.scss","../scss/05-components/_hero.scss","../scss/06-pages/_index.scss","../scss/06-pages/_nesting(2).scss","../scss/06-pages/_columns.scss","../scss/06-pages/_form.scss","../scss/06-pages/_app.scss"],"names":[],"mappings":"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","file":"app.css","sourcesContent":["//********************************* \r\n//* BASE \r\n//*********************************\r\nhtml {\r\n    font-size: 62.5%;\r\n    @include less.box();\r\n}\r\n\r\nbody { \r\n    background-image: \r\n        linear-gradient(to right, map.get(abs.$clr, 'dk', 'blue-100') 0%, map.get(abs.$clr, 'lt', 'purple-100') 100%);\r\n    font: {\r\n        family: map.get(abs.$ff, 'main');\r\n        size: 1.6rem;\r\n    } \r\n}\r\n\r\n* {\r\n    order: 5;\r\n    margin: 0;\r\n    padding: 0;\r\n    @include less.box();\r\n    @include less.query($device: 'tablet', $size: 'sm') {\r\n        order: initial;\r\n    }\r\n}\r\n\r\nul {\r\n    padding: 0;\r\n    list-style: none;\r\n}\r\n\r\nimg { max-width: 100%; }\r\n\r\n//********************************* \r\n//* TYPOGRAPHY \r\n//*********************************\r\na { \r\n    text-decoration: none; \r\n    color: map.get(abs.$clr, 'white');\r\n}","////////////////////////// \r\n// *** LESSIER 1.6 *** // \r\n///////////////////////// \r\n\r\n@use 'sass:math';\r\n@use 'sass:meta';\r\n@use 'sass:map';\r\n@use 'sass:list';\r\n@use 'sass:color';\r\n@use 'sass:string';\r\n@use 'sass:selector';\r\n\r\n///////////////////// \r\n// *** MIXINS *** //\r\n////////////////////\r\n\r\n//************************\r\n//* CSS GRID\r\n//************************ \r\n@mixin grid\r\n(\r\n    $display: true,\r\n    $rows: false, \r\n    $cols: false, \r\n    $flow: false, \r\n    $auto-rows: false, \r\n    $auto-cols: false,  \r\n    $plc-items: false, \r\n    $jt-items: false, \r\n    $al-items: false, \r\n    $plc-content: false,\r\n    $jt-content: false, \r\n    $al-content: false, \r\n    $row-gap: false, \r\n    $col-gap: false,\r\n    $gap: false\r\n) \r\n{\r\n    @if $display { display: grid; }\r\n\r\n    @if $rows and $cols {\r\n        grid: $rows / $cols;\r\n    } @else if $rows {\r\n        grid-template-rows: $rows;\r\n    } @else if $cols {\r\n        grid-template-columns: $cols;\r\n    }\r\n\r\n    @if $flow { grid-auto-flow: $flow; }\r\n    \r\n    @if $auto-rows { grid-auto-rows: $auto-rows; }\r\n\r\n    @if $auto-cols { grid-auto-columns: $auto-cols; }\r\n\r\n    @if $plc-items {\r\n        place-items: $plc-items;\r\n    } @else if $jt-items and $al-items {\r\n        @error 'You are trying to use the $jt-items and $al-items arguments individually instead of using the shorthand $plc-items for fewer code';\r\n    } @else if $jt-items {\r\n        justify-items: $jt-items;\r\n    } @else if $al-items {\r\n        align-items: $al-items;\r\n    }\r\n\r\n    @if $plc-content {\r\n        place-content: $plc-content;\r\n    } @else if $jt-content and $al-content {\r\n        @error 'You are trying to use the $jt-content and $al-content arguments individually instead of using the shorthand $plc-content for fewer code';\r\n    } @else if $jt-content {\r\n        justify-content: $jt-content;\r\n    } @else if $al-content {\r\n        align-content: $al-content;\r\n    }\r\n\r\n    @if $gap { \r\n        gap: $gap; \r\n    } @else if $row-gap {\r\n        row-gap: $row-gap;\r\n    } @else if $col-gap {\r\n        column-gap: $col-gap;\r\n    }\r\n}\r\n\r\n//************************\r\n//* CSS FLEXBOX\r\n//************************\r\n@mixin flexbox\r\n(\r\n    $display: true,\r\n    $dir: false, \r\n    $wrap: false, \r\n    $jt-content: false, \r\n    $al-items: false,\r\n    $gap: false\r\n)\r\n{\r\n    @if $display { display: flex; }\r\n\r\n    @if $dir and $wrap {\r\n        flex-flow: $dir $wrap;\r\n    } @else if $dir {\r\n        flex-direction: $dir;\r\n    } @else if $wrap {\r\n        flex-wrap: $wrap;\r\n    }\r\n\r\n    @if $jt-content { justify-content: $jt-content; }\r\n\r\n    @if $al-items { align-items: $al-items; }\r\n\r\n    @if $gap { gap: $gap; }\r\n}\r\n\r\n//************************\r\n//* PSEUDO-ELEMENT\r\n//************************\r\n@mixin pseudo-element\r\n(\r\n    $loc: before, \r\n    $cont: '',\r\n    $pos: absolute,\r\n    $inset: false,\r\n    $top: 0,\r\n    $bottom: 0,\r\n    $left: 0,\r\n    $right: 0\r\n) \r\n{\r\n    position: relative;\r\n    &::#{$loc} {\r\n        content: $cont;\r\n        position: $pos;\r\n        @if $inset {\r\n            inset: $inset;\r\n        } @else if $inset == false {\r\n            inset: $top $right $bottom $left;\r\n        }\r\n        @content;\r\n    }\r\n}\r\n\r\n//************************\r\n//* SUPPORT\r\n//************************ \r\n@mixin support\r\n(\r\n    $property: false, \r\n    $value: false, \r\n    $support: false,\r\n    $args...\r\n) \r\n{\r\n    #{$property}: $value;\r\n    @supports not (#{$property}: $value) {\r\n        #{$property}: $value; \r\n        @if $support {\r\n            @each $key, $prefix in meta.keywords($args) {\r\n                -#{$prefix}-#{$property}: $value;\r\n            }\r\n        } @else if $support != true {\r\n            -webkit-#{$property}: $value;\r\n            -moz-#{$property}: $value;\r\n            -ms-#{$property}: $value;\r\n            -o-#{$property}: $value;\r\n        }\r\n    }\r\n}\r\n\r\n//************************\r\n//* SHADOW\r\n//************************\r\n@mixin shadow\r\n(\r\n    $type: box,\r\n    $x-axis: 0, \r\n    $y-axis: 0, \r\n    $blur: 0, \r\n    $spread: 0, \r\n    $color: #000, \r\n) \r\n{\r\n    @if $type == 'box' {\r\n        #{$type}-shadow: $x-axis $y-axis $blur $spread $color;\r\n    } @else if $type == 'text' {\r\n        #{$type}-shadow: $x-axis $y-axis $blur $color;\r\n    } @else {\r\n        @error '#{$type} is an unknown value, try using either box or text for creating shadows';\r\n    }\r\n}\r\n\r\n//************************\r\n//* MEDIA QUERIES\r\n//************************\r\n$vw-mobile-sm: 360px !default;\r\n$vw-mobile-md: 414px !default;\r\n$vw-mobile-lg: 480px !default;\r\n$vw-mobile-xl: 552px !default;\r\n\r\n$vw-tablet-sm: 768px !default;\r\n$vw-tablet-md: 912px !default;\r\n$vw-tablet-lg: 1024px !default;\r\n$vw-tablet-xl: 1280px !default;\r\n\r\n$vw-desktop-sm: 1366px !default;\r\n$vw-desktop-md: 1536px !default;\r\n$vw-desktop-lg: 1920px !default;\r\n\r\n$screen-sizes: \r\n(\r\n    'mobile': (\r\n        'sm': $vw-mobile-sm,\r\n        'md': $vw-mobile-md,\r\n        'lg': $vw-mobile-lg,\r\n        'xl': $vw-mobile-xl\r\n    ),\r\n    'tablet': (\r\n        'sm': $vw-tablet-sm,\r\n        'md': $vw-tablet-md,\r\n        'lg': $vw-tablet-lg,\r\n        'xl': $vw-tablet-xl\r\n    ),\r\n    'desktop': (\r\n        'sm': $vw-desktop-sm,\r\n        'md': $vw-desktop-md,\r\n        'lg': $vw-desktop-lg\r\n    )\r\n);\r\n\r\n@mixin query\r\n(\r\n    $type: min-width, \r\n    $device: false, \r\n    $size: false\r\n) \r\n{\r\n    $screen: map.get($screen-sizes, $device, $size); \r\n    @media (#{$type}: $screen) { @content; }\r\n\r\n    @if $device == false { \r\n        @error 'You have not given an available device value for your media query yet'; \r\n    } @else if $size == false {\r\n        @error 'You have not given an available screen size for your media query yet';\r\n    }\r\n}\r\n\r\n//************************\r\n//* BOX-MODEL\r\n//************************\r\n@mixin box() {\r\n    $selector: selector.parse(&);\r\n    $parent-1: selector.parse('html');\r\n    $parent-2: selector.parse('*');\r\n\r\n    @if $parent-1 == $selector {\r\n        box-sizing: border-box;\r\n    } @else if $parent-2 == $selector {\r\n        &,\r\n        &::before,\r\n        &::after { box-sizing: inherit; }\r\n    } @else {\r\n        @error 'You are trying to parse this mixin within a selector that is neither #{$parent-1} or #{$parent-2}';\r\n    }\r\n}\r\n\r\n//************************\r\n//* COMING SOON...\r\n//************************","//********************************* \r\n//* EXTENDS \r\n//*********************************\r\n%heading {\r\n    font-size: 3.2rem;\r\n    text-transform: uppercase;\r\n    letter-spacing: abs.$spacing;\r\n    color: map.get(abs.$clr, 'white');\r\n}\r\n\r\n%layout-basics {\r\n    //* NOTE!: The display and inline-size properties were declared in order to avoid the margin collapsing (it happened several times).\r\n    //* INFO: https://www.sitepoint.com/community/t/margin-collapse-and-how-to-get-rid-of-it/5460/4\r\n    display: inline-block;\r\n    margin-block: map.get(abs.$ly, 'margin-block');\r\n    padding: map.get(abs.$ly, 'padding');\r\n    inline-size: 100%;\r\n    text-align: center;\r\n    border-radius: map.get(abs.$ly, 'rounded');\r\n    background-color: map.get(abs.$alpha, 'black-200');\r\n    color: map.get(abs.$clr, 'white');\r\n    overflow: hidden;\r\n}","@use 'sass:list';\r\n@use 'sass:string';\r\n//********************************* \r\n//* FONTS \r\n//*********************************\r\n$spacing: .2em;\r\n$main-font: Arial, Helvetica, sans-serif;\r\n$form-font: string.quote('Courier New'), Courier, monospace;\r\n$ff: (\r\n    'main': $main-font,\r\n    'form': $form-font\r\n);","//********************************* \r\n//* UTILITIES \r\n//*********************************\r\n.u-padding-0 { padding: 0; }","//********************************* \r\n//* NAV-MAIN\r\n//*********************************\r\n.nav {\r\n    &-container {\r\n        @extend %layout-basics;\r\n        //* NOTE!: The order of the elements will look different in mobile in contrast to desktop, this is because the navigation looks weird below the header (as it's in the original order) when is deployed, therefore put the navigation on top make the design better.        \r\n        order: -1;\r\n        @include less.query($device: 'tablet', $size: 'sm') {\r\n            order: initial;\r\n        }\r\n    }\r\n\r\n    &__list {\r\n        &-main {\r\n            display: none;\r\n            @include less.query($device: 'tablet', $size: 'sm') {\r\n                @include less.flexbox($wrap: wrap);\r\n            }\r\n            @include less.query($device: 'tablet', $size: 'lg') {\r\n                @include less.flexbox($wrap: nowrap);\r\n            }\r\n    \r\n            .nav__item {\r\n                @include less.query($device: 'tablet', $size: 'sm') {\r\n                    flex-basis: 50%\r\n                }\r\n            }\r\n    \r\n            .-basis-25 {\r\n                @include less.query($device: 'tablet', $size: 'sm') {\r\n                    flex-basis: 25%;\r\n                }\r\n            }\r\n    \r\n            &.is-open {\r\n                @include less.flexbox($dir: column, $wrap: wrap);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.toggle-nav {\r\n    @include less.flexbox($jt-content: center, $al-items: center);\r\n    color: map.get(abs.$clr, 'white');\r\n    padding: map.get(abs.$ly, 'padding');\r\n    @include less.query($device: 'tablet', $size: 'sm') {\r\n        display: none;\r\n    }\r\n\r\n    &-icon,\r\n    &-span { margin-inline: .5em; }\r\n\r\n    &-icon { inline-size: 2rem; }\r\n}","//********************************* \r\n//* FOOTER \r\n//*********************************\r\n.footer {\r\n    &-container { @extend %layout-basics; }\r\n\r\n    &__content { letter-spacing: abs.$spacing; }\r\n\r\n    &__span { \r\n        font: {\r\n            weight: 700;\r\n            variant: small-caps;\r\n        }\r\n    }\r\n}","//********************************* \r\n//* CONTAINER \r\n//*********************************\r\n.container {\r\n    @include less.flexbox($dir: column);\r\n    margin: 4rem auto;\r\n    inline-size: clamp(30rem, 90%, 114rem);\r\n}","//********************************* \r\n//* PRE-LOADER \r\n//*********************************\r\n.lds-ring {\r\n    position: relative;\r\n    @include less.flexbox($dir: column);\r\n    inline-size: 80px;\r\n    block-size: 80px;\r\n}\r\n\r\n.lds-ring div {\r\n    position: absolute;\r\n    display: block;\r\n    margin: 8px;\r\n    inline-size: 64px;\r\n    block-size: 64px;\r\n    box-sizing: border-box;\r\n    border: {\r\n        width: 8px;\r\n        style: solid;\r\n        color: \r\n            #fff \r\n            transparent \r\n            transparent \r\n            transparent;\r\n        radius: 50%;\r\n    }\r\n    animation: {\r\n        name: lds-ring;\r\n        duration: 1.2s;\r\n        timing-function: cubic-bezier(0.5, 0, 0.5, 1);\r\n        iteration-count: infinite;\r\n\r\n    }\r\n    \r\n    &:nth-child(1) { animation-delay: -0.45s; }\r\n\r\n    &:nth-child(2) { animation-delay: -0.30s; }\r\n\r\n    &:nth-child(3) { animation-delay: -0.15s; }\r\n}\r\n\r\n@keyframes lds-ring {\r\n    0% {\r\n        transform: rotate(0deg);\r\n    }\r\n    100% {\r\n        transform: rotate(360deg);\r\n    }\r\n}\r\n\r\n.is-hidden { overflow: hidden; }\r\n\r\n.is-centered {\r\n    @include less.flexbox($jt-content: center, $al-items: center);\r\n    block-size: 100vh;\r\n}","//********************************* \r\n//* NAVIGATION \r\n//*********************************\r\n.nav {\r\n    &-container { \r\n        @extend %layout-basics;\r\n    }\r\n\r\n    &__list {\r\n        @include less.query($device: 'tablet', $size: 'sm') {\r\n            @include less.flexbox();\r\n        }\r\n    }\r\n\r\n    &__item { flex-grow: 1; }\r\n\r\n    &__link {\r\n        display: inline-block;\r\n        padding: map.get(abs.$ly, 'padding');\r\n        inline-size: 100%;\r\n        font-size: 1.6rem;\r\n        letter-spacing: abs.$spacing;\r\n        color: map.get(abs.$clr, 'white');\r\n        transition: abs.$trans-300;\r\n\r\n        &:hover { background-color: map.get(abs.$alpha, 'black-300'); }\r\n    }\r\n}","//********************************* \r\n//* VARIABLES \r\n//*********************************\r\n@import 'fonts';\r\n@import 'colors';\r\n@import 'layout';\r\n\r\n//* For transition... 👇\r\n$trans-300: all 300ms ease-in-out;","//********************************* \r\n//* HERO \r\n//*********************************\r\n.hero {\r\n    &-container {\r\n        @extend %layout-basics;\r\n        img {\r\n            margin-block: map.get(abs.$ly, 'margin-block');\r\n            inline-size: 90%;\r\n        }\r\n    }\r\n}","//********************************* \r\n//* DETAILS \r\n//*********************************\r\n.details {\r\n    &-container { \r\n        font-weight: bold; \r\n        @extend %layout-basics;\r\n    }\r\n\r\n    &__text:first-of-type {\r\n        margin-block-end: map.get(abs.$ly, 'margin-block');\r\n    }\r\n}\r\n\r\n//********************************* \r\n//* INPUTS\r\n//*********************************\r\n.inputs {\r\n    &-container {\r\n        @extend %layout-basics;\r\n    }\r\n}\r\n\r\n//* This is the formulario... 👇\r\n.sign-up {\r\n    @include less.flexbox($dir: column, $gap: 3rem);\r\n    @include less.query($device: 'tablet', $size: 'sm') {\r\n        @include less.flexbox(\r\n            $display: false,\r\n            $dir: row,\r\n            $gap: 6rem\r\n        );\r\n    }\r\n\r\n    @at-root {\r\n        & > input {\r\n            block-size: 3rem;\r\n            border: none;\r\n            border-radius: map.get(abs.$ly, 'rounded');\r\n            text-align: center;\r\n            @include less.query($device: 'tablet', $size: 'sm') {\r\n                flex: {\r\n                    grow: 1;\r\n                    basis: 0;\r\n                }\r\n            }\r\n\r\n            &:focus { \r\n                outline-color: map.get(abs.$clr, 'dk', 'blue-100'); \r\n            }\r\n        }\r\n    }\r\n}","//********************************* \r\n//* NESTING (2)\r\n//*********************************\r\n\r\n//* Due to I names both pages similar I had problems when creating unique classes (there are two classes with the keyword \"nesting\", but one refers to the nesting(1) page, and the other to the nesting(2) page ... in essence there's not too much problem because the classes don't have te exact same name, but you know, if this would a mistake repeated to many times across the two pages, would be difficult to understand everything.\r\n.nesting {\r\n    &-container {\r\n        $_flex-gap: map.get(abs.$ly, 'margin-block') * 2;\r\n        @include less.flexbox\r\n        (\r\n            $wrap: wrap, \r\n            $jt-content: center, \r\n            $al-items: center, \r\n            $gap: $_flex-gap\r\n        );\r\n        margin: map.get(abs.$ly, 'margin-block') auto;\r\n        max-inline-size: 90rem;\r\n        padding: map.get(abs.$ly, 'padding');\r\n        font-size: 1.8rem;\r\n        text-align: center;\r\n        @include less.query($device: 'tablet', $size: 'md') {\r\n            @include less.flexbox($display: false, $wrap: nowrap);   \r\n        }\r\n    }\r\n}\r\n\r\n//********************************* \r\n//* NESTING (2) - CARD\r\n//*********************************\r\n.card {\r\n    $_flex-gap: 2.5rem;\r\n    &-container {\r\n        @include less.flexbox\r\n        (\r\n            $dir: column, \r\n            $jt-content: center, \r\n            $gap: $_flex-gap\r\n        );\r\n        inline-size: 100%;\r\n        padding: map.get(abs.$ly, 'padding');\r\n        border-radius: map.get(abs.$ly, 'rounded');\r\n        background-color: map.get(abs.$alpha, 'white-300');\r\n        transition: abs.$trans-300;\r\n        @include less.query($device: 'tablet', $size: 'sm') {\r\n            max-inline-size: 30rem;\r\n        }\r\n\r\n        &:hover {\r\n            background-color: map.get(abs.$alpha, 'white-200');\r\n            @include less.query($device: 'desktop', $size: 'sm') {\r\n                transform: translateY(-2.5%);\r\n            }\r\n        }\r\n\r\n        &:nth-child(odd) { block-size: 60rem; }\r\n\r\n        &:nth-child(even) { \r\n            order: 1;\r\n            block-size: 70rem; \r\n            @include less.query($device: 'tablet', $size: 'md') {\r\n                order: initial;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__heading { \r\n        @extend %heading;\r\n        text-transform: capitalize; \r\n    }\r\n    \r\n    &__content {\r\n        @include less.flexbox($dir: column, $gap: $_flex-gap);\r\n    }\r\n\r\n    &__item {\r\n        padding: .5em;\r\n        border-bottom: .1rem solid map.get(abs.$clr, 'gray');\r\n        text-align: center;\r\n        line-height: 1.5em;\r\n    }\r\n\r\n\r\n    &__price {\r\n        font: {\r\n            size: 5rem;\r\n            weight: bold;\r\n        }\r\n        display: block;\r\n    }\r\n\r\n    &__btn {\r\n        align-self: center;\r\n        padding: 1em;\r\n        border-radius: map.get(abs.$ly, 'rounded');\r\n        background-color: map.get(abs.$clr, 'lt', 'yellow-200');\r\n        color: initial;\r\n        transition: abs.$trans-300;\r\n\r\n        &:hover {\r\n            background-color: map.get(abs.$clr, 'dk', 'yellow-100');\r\n        }\r\n    }\r\n}","//********************************* \r\n//* COLUMNS \r\n//*********************************\r\n.columns {\r\n    &-container {\r\n        @include less.flexbox($dir: column, $gap: 2rem);\r\n        margin-block: map.get(abs.$ly, 'margin-block');\r\n        padding: map.get(abs.$ly, 'padding-inline');\r\n        @include less.query($device: 'tablet', $size: 'md') {\r\n            @include less.flexbox\r\n            (\r\n                $display: false, \r\n                $dir: row,\r\n                $wrap: wrap,\r\n                $jt-content: center,\r\n            );\r\n        }\r\n    }\r\n\r\n    $_fs: 1rem;\r\n\r\n    &__item {\r\n        flex-basis: 15rem;\r\n        @include less.flexbox($jt-content: center, $al-items: center);\r\n        padding: 1em;\r\n        font-size: $_fs * 2.5;\r\n        background-color: map.get(abs.$alpha, 'white-200');\r\n        color: map.get(abs.$clr, 'white');\r\n        @include less.query($device: 'tablet', $size: 'md') {\r\n            flex-basis: calc(33.33% - 1.5rem);\r\n            block-size: 15rem;\r\n        }\r\n    }\r\n\r\n    &__item--small { font-size: $_fs * 2; }\r\n\r\n    &__item--large { font-size: $_fs * 3; }\r\n}","//********************************* \r\n//* FORM \r\n//*********************************\r\n.form {\r\n    &-container {\r\n        @include less.grid\r\n        (\r\n            $cols: repeat(2, 1fr),\r\n            $gap: 1rem\r\n        );\r\n        margin: map.get(abs.$ly, 'margin-block');\r\n        padding: .5em;\r\n        border: {\r\n            width: .5em;\r\n            style: solid;\r\n            color: map.get(abs.$alpha, 'black-300');\r\n        }\r\n        border-radius: map.get(abs.$ly, 'rounded');\r\n        background-color: map.get(abs.$clr, 'white');\r\n        font-size: 2rem;\r\n        line-height: 2;\r\n        @include less.query($device: 'tablet', $size: 'lg') {\r\n            @include less.flexbox($jt-content: space-between, $al-items: center);\r\n        }\r\n    }\r\n\r\n    &__field {\r\n        $_padding: .75em;\r\n\r\n        &:nth-child(1) {\r\n            position: relative;\r\n            grid-column: 1 / -1;\r\n            @include less.query($device: 'tablet', $size: 'sm') {\r\n                flex-basis: 40%;\r\n            }\r\n\r\n            i {\r\n                position: absolute;\r\n                inset: {\r\n                    block-start: 50%;\r\n                    inline-end: .5em;\r\n                }\r\n                transform: translateY(-50%);\r\n                padding-inline: .25em;\r\n                background-color: map.get(abs.$clr, 'white');\r\n                color: map.get(abs.$clr, 'black');\r\n            }\r\n        }\r\n\r\n        &:nth-child(2),\r\n        &:nth-child(3) {\r\n            grid-column: 1 / -1;\r\n            @include less.query($device: 'tablet', $size: 'sm') {\r\n                @include less.flexbox\r\n                (\r\n                    $jt-content: space-between, \r\n                    $al-items: center,\r\n                    $gap: 1rem\r\n                );\r\n            }\r\n        }\r\n\r\n        &:nth-child(4) {\r\n            grid-column: 1 / 2;\r\n        }\r\n\r\n        &:nth-child(5) {\r\n            grid-column: 2 / -1;\r\n        }\r\n\r\n        label { \r\n            @include less.query($device: 'tablet', $size: 'sm') {\r\n                flex-basis: 6rem;\r\n                text-align: center;\r\n            }\r\n        }\r\n\r\n        > input,\r\n        > select {\r\n            inline-size: 100%;\r\n            padding-inline: $_padding;\r\n            block-size: 5rem;\r\n            font: {\r\n                family: map.get(abs.$ff, 'form');\r\n                weight: bold;\r\n            }\r\n            border: {\r\n                width: .1rem;\r\n                style: solid;\r\n                color: map.get(abs.$clr, 'gray');\r\n                radius: math.div(map.get(abs.$ly, 'rounded'), 2);\r\n            }\r\n\r\n            &:focus {\r\n                outline: none;\r\n            }\r\n\r\n            &:placeholder-shown {\r\n                padding-inline-start: .5em;\r\n            }\r\n        }\r\n\r\n        > input[type=\"submit\"] {\r\n            padding: .25em .5em;\r\n            border: none;\r\n            background-color: map.get(abs.$clr, 'lt', 'red-100');\r\n            color: map.get(abs.$clr, 'white');\r\n            transition: abs.$trans-300;\r\n\r\n            &:hover {\r\n                background-color: map.get(abs.$clr, 'dk', 'red-100');\r\n            }\r\n        }\r\n    }\r\n}","//********************************* \r\n//* APP \r\n//*********************************\r\n.app {\r\n    &-container {\r\n        @include less.flexbox($dir: column);\r\n        margin-inline: auto;\r\n        max-inline-size: 50rem;\r\n        block-size: 70rem;\r\n        border: {\r\n            width: 1rem;\r\n            style: solid;\r\n            color: map.get(abs.$alpha, 'black-200');\r\n            radius: map.get(abs.$ly, 'rounded');\r\n        }\r\n    }\r\n\r\n    &__header {\r\n        @include less.flexbox\r\n        (\r\n            $wrap: wrap,\r\n            $jt-content: center,\r\n            $al-items: center\r\n        );\r\n        background-color: map.get(abs.$clr, 'lt', 'yellow-100');\r\n        @include less.query($device: 'mobile', $size: 'lg') {\r\n            @include less.flexbox($display: false, $wrap: nowrap);\r\n        }\r\n\r\n        > a {\r\n            flex: {\r\n                grow: 1;\r\n                shrink: 1;\r\n                basis: 40%;\r\n            }\r\n            order: 1;\r\n            @include less.query($device: 'mobile', $size: 'lg') {\r\n                flex-basis: 20%;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__heading {\r\n        @extend %heading;\r\n        flex: {\r\n            grow: 1;\r\n            shrink: 1;\r\n            basis: 100%;\r\n        }\r\n        order: 2;\r\n        margin-block: 1em;\r\n        color: map.get(abs.$clr, 'dk', 'yellow-300');\r\n        font-size: 2rem;\r\n        text-align: center;\r\n        @include less.query($device: 'mobile', $size: 'lg') {\r\n            flex-basis: 60%;\r\n            order: 1;\r\n        }\r\n    }\r\n\r\n    &__btn {\r\n        @include less.flexbox\r\n        (\r\n            $jt-content: center, \r\n            $al-items: center,\r\n            $gap: .25em\r\n        );\r\n        margin: map.get(abs.$ly, 'margin-block');\r\n        padding: .5em;\r\n        border-radius: map.get(abs.$ly, 'rounded');\r\n        background-color: map.get(abs.$alpha, 'black-200');\r\n        color: map.get(abs.$clr, 'white');\r\n        font-weight: bold;\r\n        transition: abs.$trans-300;\r\n\r\n        &:hover {\r\n            background-color: map.get(abs.$clr, 'dk', 'yellow-200');\r\n        }\r\n    }\r\n\r\n    &__content {\r\n        scrollbar-width: none;\r\n        flex: {\r\n            grow: 1;\r\n            shrink: 1;\r\n            basis: auto;\r\n        }\r\n        padding: .5em 1em;\r\n        font-size: 1.4rem;\r\n        line-height: 1.4;\r\n        background-color: map.get(abs.$clr, 'white');\r\n        color: map.get(abs.$clr, 'black');\r\n        overflow-y: scroll;\r\n\r\n        &::-webkit-scrollbar {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    &__paragraph {\r\n        margin-block: .25em;\r\n        text-align: justify;\r\n    }\r\n\r\n    &__image {\r\n        text-align: center;\r\n\r\n        > img[src*=\"wesbos\"] {\r\n            inline-size: 21.6rem;\r\n            block-size: 14.4rem;\r\n            @include less.query($device: 'mobile', $size: 'lg') {\r\n                float: left;\r\n                margin-inline-end: 1rem;\r\n            }\r\n        }\r\n\r\n        >img[src*=\"yt3\"] {\r\n            inline-size: 20rem;\r\n            aspect-ratio: 1 / 1;\r\n            @include less.query($device: 'mobile', $size: 'lg') {\r\n                float: right;\r\n                margin-inline-start: 1rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__footer {\r\n        @include less.flexbox($wrap: wrap);\r\n        flex-grow: 1;\r\n    }\r\n\r\n    &__btn--footer {\r\n        flex: {\r\n            grow: 1;\r\n            shrink: 1;\r\n            basis: 50%;\r\n        }\r\n        @include less.flexbox\r\n        (\r\n            $dir: column,\r\n            $al-items: center,\r\n            $jt-content: center\r\n        );\r\n        block-size: 7rem;\r\n        background-color: map.get(abs.$clr, 'lt', 'yellow-100');\r\n        color: map.get(abs.$clr, 'white');\r\n        transition: abs.$trans-300;\r\n        @include less.query($device: 'mobile', $size: 'lg') {\r\n            flex-basis: 25%;\r\n        }\r\n\r\n        &:hover {\r\n            background-color: map.get(abs.$clr, 'dk', 'yellow-200');\r\n        }\r\n\r\n        > * {  margin: .3em; }\r\n    }\r\n}"]}